import org.openapitools.generator.gradle.plugin.tasks.GenerateTask

plugins {
    id 'war'
    id "io.freefair.lombok" version "$lombokVersion"

    /**
     * To generate spring server stubs (controllers, delegates, and models)
     * https://openapi-generator.tech/
     * https://github.com/OpenAPITools/openapi-generator
     */
    id "org.openapi.generator" version "6.2.1"

    /**
     * To generate swagger UI
     * https://github.com/int128/gradle-swagger-generator-plugin
     */
    id 'org.hidetake.swagger.generator' version '2.19.2'
}

group 'ee.biceps.api'

repositories {
    mavenCentral()
}

dependencies {
    // to generate swagger UI
    swaggerUI 'org.webjars:swagger-ui:3.52.5'

    // dependencies for openapi-generator generated server stubs
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    implementation "io.swagger.core.v3:swagger-annotations:2.2.8"
    implementation 'io.swagger.core.v3:swagger-models:2.2.8'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.4'

    implementation "jakarta.servlet:jakarta.servlet-api:$servletVersion"
    implementation "org.springframework:spring-webmvc:$springVersion"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    implementation "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"

    implementation "org.postgresql:postgresql:$pgJdbcVersion"
    implementation "org.jdbi:jdbi3-core:$jdbiVersion"
    implementation "org.jdbi:jdbi3-sqlobject:$jdbiVersion"

    testImplementation "org.springframework:spring-test:$springVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

test {
    useJUnitPlatform()
    testLogging.showStandardStreams = true
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

// openapi-generator task
tasks.register('generateOpenApiServer', GenerateTask) {
    doFirst {
        delete "$buildDir/openapi-generator"
    }
    def generatedPackage = 'ee.biceps.generated'

    generatorName = 'spring'
    inputSpec = "$projectDir/api_spec.yaml".toString()
    outputDir = "$buildDir/openapi-generator".toString()
    invokerPackage = "${generatedPackage}.invoker"
    packageName = "$generatedPackage"
    apiPackage = "${generatedPackage}.api"
    modelPackage = "${generatedPackage}.model"
    configOptions = [
            configPackage: "${generatedPackage}.config",

            // which imports and dependencies to use (// <default>)
            dateLibrary: "java8", // java8
            fullJavaUtil: "true", // false
            openApiNullable: "true", // true
            performBeanValidation: "false", // false
            useSpringBoot3: "true", // false - will use jakarta instead of javax

            // using swaggerUI for documentation
            annotationLibrary: "none", // swagger2
            documentationProvider: "none", // springdoc

            // Pattern of api (// <default>)
            delegatePattern: "true", // false
            interfaceOnly: "false", // false
            skipDefaultInterface: "false", // false
            requestMappingMode: "none", // controller - vs api_interface
            unHandledException: "false", // false - useful for @ControllerAdvice
            useSpringController: "false" // false - @Controller on Api-class
    ]
}

tasks.register('copyOpenApiServer', Copy) {
    dependsOn 'generateOpenApiServer'
    doFirst {
        delete fileTree("$projectDir/src/generated").matching {
            include "**/*.java"
        }
    }
    from "$buildDir/openapi-generator/src/main"
    into "$projectDir/src/generated"
    include "**/*.java"
    exclude ".openapi-generator", "**/invoker", "**/config", "**/resources"
}

generateSwaggerUI {
    inputFile = file('api_spec.yaml')
    outputDir = file("$projectDir/src/generated/resources/swagger-ui")
    wipeOutputDir true
}

war {
    dependsOn 'generateSwaggerUI'
    from("$projectDir/src/generated/resources/swagger-ui") {
        into 'swagger-ui/'
    }
    setArchivesBaseName 'api'
}

sourceSets.main.java.srcDirs += "$projectDir/src/generated/java"

build {
    dependsOn 'copyOpenApiServer'
}