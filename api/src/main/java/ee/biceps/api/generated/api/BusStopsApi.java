/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package ee.biceps.api.generated.api;

import ee.biceps.api.generated.model.BusStop;
import ee.biceps.api.generated.model.ErrorMessage;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Generated;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2023-01-30T23:16:18.141542013+02:00[Europe/Tallinn]")
@Validated
@Tag(name = "bus-stops", description = "the bus-stops API")
public interface BusStopsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * POST /bus-stops : Create a bus stop
     * Creates a bus stop with given name and location and stores it in the database.
     *
     * @param busStop A new bus stop object with name and coordanites. (optional)
     * @return Returned bus stop object with fullfilled id field from database. (status code 201)
     */
    @Operation(
        operationId = "createBusStop",
        summary = "Create a bus stop",
        tags = { "LineMangagment" },
        responses = {
            @ApiResponse(responseCode = "201", description = "Returned bus stop object with fullfilled id field from database.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = BusStop.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.POST,
        value = "/bus-stops",
        produces = { "application/json" },
        consumes = { "application/json" }
    )
    default ResponseEntity<BusStop> _createBusStop(
        @Parameter(name = "BusStop", description = "A new bus stop object with name and coordanites.") @Valid @RequestBody(required = false) BusStop busStop
    ) {
        return createBusStop(busStop);
    }

    // Override this method
    default  ResponseEntity<BusStop> createBusStop(BusStop busStop) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"latitude\" : \"58.385787\", \"name\" : \"Vene\", \"id\" : 0, \"longitude\" : \"26.726408\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * DELETE /bus-stops/{busStopId} : Deletes a bus-stop.
     * Searches for a specific bus-stop with given id and deletes it from database.
     *
     * @param busStopId Common ID parameter of bus-stop. (required)
     * @return Bus-stop with given ID deleted successfully. (status code 204)
     *         or Bus-stop with given ID not found error. (status code 404)
     */
    @Operation(
        operationId = "deleteBusStop",
        summary = "Deletes a bus-stop.",
        responses = {
            @ApiResponse(responseCode = "204", description = "Bus-stop with given ID deleted successfully."),
            @ApiResponse(responseCode = "404", description = "Bus-stop with given ID not found error.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = ErrorMessage.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.DELETE,
        value = "/bus-stops/{busStopId}",
        produces = { "application/json" }
    )
    default ResponseEntity<Void> _deleteBusStop(
        @Parameter(name = "busStopId", description = "Common ID parameter of bus-stop.", required = true) @PathVariable("busStopId") Integer busStopId
    ) {
        return deleteBusStop(busStopId);
    }

    // Override this method
    default  ResponseEntity<Void> deleteBusStop(Integer busStopId) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /bus-stops : Gets all bus stops with given filters.
     * Queries all bus stops with given optional name and limit filters.
     *
     * @param maxResults The numbers of items to return. (optional, default to 20)
     * @param name Optional parameter to filter bus stops by partial name. (optional)
     * @return Returned a list of bus stops which fullfill query params. (status code 200)
     */
    @Operation(
        operationId = "readBusStops",
        summary = "Gets all bus stops with given filters.",
        tags = { "LineMangagment" },
        responses = {
            @ApiResponse(responseCode = "200", description = "Returned a list of bus stops which fullfill query params.", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = BusStop.class))
            })
        }
    )
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/bus-stops",
        produces = { "application/json" }
    )
    default ResponseEntity<List<BusStop>> _readBusStops(
        @Min(1) @Max(50) @Parameter(name = "maxResults", description = "The numbers of items to return.") @Valid @RequestParam(value = "maxResults", required = false, defaultValue = "20") Integer maxResults,
        @Parameter(name = "name", description = "Optional parameter to filter bus stops by partial name.") @Valid @RequestParam(value = "name", required = false) String name
    ) {
        return readBusStops(maxResults, name);
    }

    // Override this method
    default  ResponseEntity<List<BusStop>> readBusStops(Integer maxResults, String name) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"latitude\" : \"58.385787\", \"name\" : \"Vene\", \"id\" : 0, \"longitude\" : \"26.726408\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
